plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id 'application'
    id 'antlr'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'java'
}

group = 'com.rchowell'
version = '0.0.1'

repositories {
    mavenCentral()
}

dependencies {
    // Build Dependencies
    implementation 'org.apache.arrow:arrow-memory:0.17.0'
    implementation 'org.apache.arrow:arrow-vector:0.17.0'
    implementation 'com.opencsv:opencsv:5.5'
    implementation 'commons-cli:commons-cli:1.4'
    implementation 'de.vandermeer:asciitable:0.3.2'

    // Shell
    implementation 'org.jline:jline:3.20.0'
    implementation 'info.picocli:picocli-shell-jline3:4.6.1'
    implementation 'info.picocli:picocli:4.6.1'
    implementation 'org.fusesource.jansi:jansi:2.3.4'

    // Parser generator
    antlr 'org.antlr:antlr4:4.9.2'
    compileOnly 'org.antlr:antlr4-runtime:4.9.2'

    // Test Dependencies
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'

    // Test Runtime Dependencies
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ["-visitor", "-long-messages", "-no-listener"]
    outputDirectory = file("src/main/java/com/rchowell/sift/lang/antlr")
}

application {
    mainClassName = 'com.rchowell.sift.shell.MainKt'
}

// Build fat Jar for shell
shadowJar {
    archiveBaseName.set('sift')
    archiveClassifier.set('')
    archiveVersion.set('')
}

// Aliases
task shell { dependsOn shadowJar }
task gen { dependsOn generateGrammarSource }
