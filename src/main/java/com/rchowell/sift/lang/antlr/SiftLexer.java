// Generated from Sift.g4 by ANTLR 4.9.2

   package com.rchowell.sift.lang.antlr;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class SiftLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		PIPE=1, MAPS=2, LP=3, RP=4, COMMA=5, SQUOTE=6, EQ=7, GT=8, LT=9, GTE=10, 
		LTE=11, AND=12, OR=13, PLUS=14, MINUS=15, MULT=16, DIV=17, MOD=18, MIN=19, 
		MAX=20, SUM=21, AVG=22, COUNT=23, SELECT=24, PROJECT=25, GROUP=26, SORT=27, 
		LIMIT=28, DISTINCT=29, ON=30, AS=31, BY=32, OUTER=33, LEFT=34, RIGHT=35, 
		ASC=36, DESC=37, TRUE=38, FALSE=39, JOIN=40, CROSS=41, UNION=42, DIFF=43, 
		INTERSECT=44, ID=45, STRING=46, INT=47, WS=48;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"PIPE", "MAPS", "LP", "RP", "COMMA", "SQUOTE", "EQ", "GT", "LT", "GTE", 
			"LTE", "AND", "OR", "PLUS", "MINUS", "MULT", "DIV", "MOD", "MIN", "MAX", 
			"SUM", "AVG", "COUNT", "SELECT", "PROJECT", "GROUP", "SORT", "LIMIT", 
			"DISTINCT", "ON", "AS", "BY", "OUTER", "LEFT", "RIGHT", "ASC", "DESC", 
			"TRUE", "FALSE", "JOIN", "CROSS", "UNION", "DIFF", "INTERSECT", "ID", 
			"STRING", "INT", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'|>'", "'->'", "'('", "')'", "','", "'''", "'='", "'>'", "'<'", 
			"'>='", "'<='", "'&&'", "'||'", "'+'", "'-'", "'*'", "'/'", "'%'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "PIPE", "MAPS", "LP", "RP", "COMMA", "SQUOTE", "EQ", "GT", "LT", 
			"GTE", "LTE", "AND", "OR", "PLUS", "MINUS", "MULT", "DIV", "MOD", "MIN", 
			"MAX", "SUM", "AVG", "COUNT", "SELECT", "PROJECT", "GROUP", "SORT", "LIMIT", 
			"DISTINCT", "ON", "AS", "BY", "OUTER", "LEFT", "RIGHT", "ASC", "DESC", 
			"TRUE", "FALSE", "JOIN", "CROSS", "UNION", "DIFF", "INTERSECT", "ID", 
			"STRING", "INT", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public SiftLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Sift.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\62\u01fe\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\3\2\3\2\3\2\3\3\3\3\3\3"+
		"\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\13"+
		"\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21"+
		"\3\22\3\22\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\5\24"+
		"\u0097\n\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\5\25\u00a2\n"+
		"\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\5\26\u00ad\n\26\3\27"+
		"\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\5\27\u00b8\n\27\3\30\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\5\30\u00c9"+
		"\n\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31"+
		"\3\31\3\31\3\31\3\31\3\31\5\31\u00dd\n\31\3\32\3\32\3\32\3\32\3\32\3\32"+
		"\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32"+
		"\3\32\5\32\u00f4\n\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33"+
		"\3\33\3\33\3\33\3\33\3\33\5\33\u0105\n\33\3\34\3\34\3\34\3\34\3\34\3\34"+
		"\3\34\3\34\3\34\3\34\3\34\3\34\5\34\u0113\n\34\3\35\3\35\3\35\3\35\3\35"+
		"\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\5\35\u0124\n\35\3\36"+
		"\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36"+
		"\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\5\36\u013e\n\36\3\37\3\37"+
		"\3\37\3\37\5\37\u0144\n\37\3 \3 \3 \3 \5 \u014a\n \3!\3!\3!\3!\5!\u0150"+
		"\n!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\5\"\u015c\n\"\3#\3#\3#\3#"+
		"\3#\3#\3#\3#\5#\u0166\n#\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\5$\u0172\n$\3%"+
		"\3%\3%\3%\3%\3%\5%\u017a\n%\3&\3&\3&\3&\3&\3&\3&\3&\5&\u0184\n&\3\'\3"+
		"\'\3\'\3\'\3\'\3\'\3\'\3\'\5\'\u018e\n\'\3(\3(\3(\3(\3(\3(\3(\3(\3(\3"+
		"(\5(\u019a\n(\3)\3)\3)\3)\3)\3)\3)\3)\5)\u01a4\n)\3*\3*\3*\3*\3*\3*\3"+
		"*\3*\3*\3*\3*\5*\u01b1\n*\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\5+\u01be\n"+
		"+\3,\3,\3,\3,\3,\3,\3,\3,\3,\5,\u01c9\n,\3-\3-\3-\3-\3-\3-\3-\3-\3-\3"+
		"-\3-\3-\3-\3-\3-\3-\3-\3-\3-\5-\u01de\n-\3.\6.\u01e1\n.\r.\16.\u01e2\3"+
		"/\3/\6/\u01e7\n/\r/\16/\u01e8\3/\7/\u01ec\n/\f/\16/\u01ef\13/\3/\3/\3"+
		"\60\6\60\u01f4\n\60\r\60\16\60\u01f5\3\61\6\61\u01f9\n\61\r\61\16\61\u01fa"+
		"\3\61\3\61\2\2\62\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31"+
		"\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65"+
		"\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62\3\2\7"+
		"\6\2//C\\aac|\4\2C\\c|\5\2\62;C\\c|\3\2\62;\5\2\13\f\17\17\"\"\2\u022b"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3"+
		"\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2"+
		"\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2"+
		"U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3"+
		"\2\2\2\3c\3\2\2\2\5f\3\2\2\2\7i\3\2\2\2\tk\3\2\2\2\13m\3\2\2\2\ro\3\2"+
		"\2\2\17q\3\2\2\2\21s\3\2\2\2\23u\3\2\2\2\25w\3\2\2\2\27z\3\2\2\2\31}\3"+
		"\2\2\2\33\u0080\3\2\2\2\35\u0083\3\2\2\2\37\u0085\3\2\2\2!\u0087\3\2\2"+
		"\2#\u0089\3\2\2\2%\u008b\3\2\2\2\'\u0096\3\2\2\2)\u00a1\3\2\2\2+\u00ac"+
		"\3\2\2\2-\u00b7\3\2\2\2/\u00c8\3\2\2\2\61\u00dc\3\2\2\2\63\u00f3\3\2\2"+
		"\2\65\u0104\3\2\2\2\67\u0112\3\2\2\29\u0123\3\2\2\2;\u013d\3\2\2\2=\u0143"+
		"\3\2\2\2?\u0149\3\2\2\2A\u014f\3\2\2\2C\u015b\3\2\2\2E\u0165\3\2\2\2G"+
		"\u0171\3\2\2\2I\u0179\3\2\2\2K\u0183\3\2\2\2M\u018d\3\2\2\2O\u0199\3\2"+
		"\2\2Q\u01a3\3\2\2\2S\u01b0\3\2\2\2U\u01bd\3\2\2\2W\u01c8\3\2\2\2Y\u01dd"+
		"\3\2\2\2[\u01e0\3\2\2\2]\u01e4\3\2\2\2_\u01f3\3\2\2\2a\u01f8\3\2\2\2c"+
		"d\7~\2\2de\7@\2\2e\4\3\2\2\2fg\7/\2\2gh\7@\2\2h\6\3\2\2\2ij\7*\2\2j\b"+
		"\3\2\2\2kl\7+\2\2l\n\3\2\2\2mn\7.\2\2n\f\3\2\2\2op\7)\2\2p\16\3\2\2\2"+
		"qr\7?\2\2r\20\3\2\2\2st\7@\2\2t\22\3\2\2\2uv\7>\2\2v\24\3\2\2\2wx\7@\2"+
		"\2xy\7?\2\2y\26\3\2\2\2z{\7>\2\2{|\7?\2\2|\30\3\2\2\2}~\7(\2\2~\177\7"+
		"(\2\2\177\32\3\2\2\2\u0080\u0081\7~\2\2\u0081\u0082\7~\2\2\u0082\34\3"+
		"\2\2\2\u0083\u0084\7-\2\2\u0084\36\3\2\2\2\u0085\u0086\7/\2\2\u0086 \3"+
		"\2\2\2\u0087\u0088\7,\2\2\u0088\"\3\2\2\2\u0089\u008a\7\61\2\2\u008a$"+
		"\3\2\2\2\u008b\u008c\7\'\2\2\u008c&\3\2\2\2\u008d\u008e\7O\2\2\u008e\u008f"+
		"\7K\2\2\u008f\u0097\7P\2\2\u0090\u0091\7O\2\2\u0091\u0092\7k\2\2\u0092"+
		"\u0097\7p\2\2\u0093\u0094\7o\2\2\u0094\u0095\7k\2\2\u0095\u0097\7p\2\2"+
		"\u0096\u008d\3\2\2\2\u0096\u0090\3\2\2\2\u0096\u0093\3\2\2\2\u0097(\3"+
		"\2\2\2\u0098\u0099\7O\2\2\u0099\u009a\7C\2\2\u009a\u00a2\7Z\2\2\u009b"+
		"\u009c\7O\2\2\u009c\u009d\7c\2\2\u009d\u00a2\7z\2\2\u009e\u009f\7o\2\2"+
		"\u009f\u00a0\7c\2\2\u00a0\u00a2\7z\2\2\u00a1\u0098\3\2\2\2\u00a1\u009b"+
		"\3\2\2\2\u00a1\u009e\3\2\2\2\u00a2*\3\2\2\2\u00a3\u00a4\7U\2\2\u00a4\u00a5"+
		"\7W\2\2\u00a5\u00ad\7O\2\2\u00a6\u00a7\7U\2\2\u00a7\u00a8\7w\2\2\u00a8"+
		"\u00ad\7o\2\2\u00a9\u00aa\7u\2\2\u00aa\u00ab\7w\2\2\u00ab\u00ad\7o\2\2"+
		"\u00ac\u00a3\3\2\2\2\u00ac\u00a6\3\2\2\2\u00ac\u00a9\3\2\2\2\u00ad,\3"+
		"\2\2\2\u00ae\u00af\7C\2\2\u00af\u00b0\7X\2\2\u00b0\u00b8\7I\2\2\u00b1"+
		"\u00b2\7C\2\2\u00b2\u00b3\7x\2\2\u00b3\u00b8\7i\2\2\u00b4\u00b5\7c\2\2"+
		"\u00b5\u00b6\7x\2\2\u00b6\u00b8\7i\2\2\u00b7\u00ae\3\2\2\2\u00b7\u00b1"+
		"\3\2\2\2\u00b7\u00b4\3\2\2\2\u00b8.\3\2\2\2\u00b9\u00ba\7E\2\2\u00ba\u00bb"+
		"\7Q\2\2\u00bb\u00bc\7W\2\2\u00bc\u00bd\7P\2\2\u00bd\u00c9\7V\2\2\u00be"+
		"\u00bf\7E\2\2\u00bf\u00c0\7q\2\2\u00c0\u00c1\7w\2\2\u00c1\u00c2\7p\2\2"+
		"\u00c2\u00c9\7v\2\2\u00c3\u00c4\7e\2\2\u00c4\u00c5\7q\2\2\u00c5\u00c6"+
		"\7w\2\2\u00c6\u00c7\7p\2\2\u00c7\u00c9\7v\2\2\u00c8\u00b9\3\2\2\2\u00c8"+
		"\u00be\3\2\2\2\u00c8\u00c3\3\2\2\2\u00c9\60\3\2\2\2\u00ca\u00cb\7U\2\2"+
		"\u00cb\u00cc\7G\2\2\u00cc\u00cd\7N\2\2\u00cd\u00ce\7G\2\2\u00ce\u00cf"+
		"\7E\2\2\u00cf\u00dd\7V\2\2\u00d0\u00d1\7U\2\2\u00d1\u00d2\7g\2\2\u00d2"+
		"\u00d3\7n\2\2\u00d3\u00d4\7g\2\2\u00d4\u00d5\7e\2\2\u00d5\u00dd\7v\2\2"+
		"\u00d6\u00d7\7u\2\2\u00d7\u00d8\7g\2\2\u00d8\u00d9\7n\2\2\u00d9\u00da"+
		"\7g\2\2\u00da\u00db\7e\2\2\u00db\u00dd\7v\2\2\u00dc\u00ca\3\2\2\2\u00dc"+
		"\u00d0\3\2\2\2\u00dc\u00d6\3\2\2\2\u00dd\62\3\2\2\2\u00de\u00df\7R\2\2"+
		"\u00df\u00e0\7T\2\2\u00e0\u00e1\7Q\2\2\u00e1\u00e2\7L\2\2\u00e2\u00e3"+
		"\7G\2\2\u00e3\u00e4\7E\2\2\u00e4\u00f4\7V\2\2\u00e5\u00e6\7R\2\2\u00e6"+
		"\u00e7\7t\2\2\u00e7\u00e8\7q\2\2\u00e8\u00e9\7l\2\2\u00e9\u00ea\7g\2\2"+
		"\u00ea\u00eb\7e\2\2\u00eb\u00f4\7v\2\2\u00ec\u00ed\7r\2\2\u00ed\u00ee"+
		"\7t\2\2\u00ee\u00ef\7q\2\2\u00ef\u00f0\7l\2\2\u00f0\u00f1\7g\2\2\u00f1"+
		"\u00f2\7e\2\2\u00f2\u00f4\7v\2\2\u00f3\u00de\3\2\2\2\u00f3\u00e5\3\2\2"+
		"\2\u00f3\u00ec\3\2\2\2\u00f4\64\3\2\2\2\u00f5\u00f6\7I\2\2\u00f6\u00f7"+
		"\7T\2\2\u00f7\u00f8\7Q\2\2\u00f8\u00f9\7W\2\2\u00f9\u0105\7R\2\2\u00fa"+
		"\u00fb\7I\2\2\u00fb\u00fc\7t\2\2\u00fc\u00fd\7q\2\2\u00fd\u00fe\7w\2\2"+
		"\u00fe\u0105\7r\2\2\u00ff\u0100\7i\2\2\u0100\u0101\7t\2\2\u0101\u0102"+
		"\7q\2\2\u0102\u0103\7w\2\2\u0103\u0105\7r\2\2\u0104\u00f5\3\2\2\2\u0104"+
		"\u00fa\3\2\2\2\u0104\u00ff\3\2\2\2\u0105\66\3\2\2\2\u0106\u0107\7U\2\2"+
		"\u0107\u0108\7Q\2\2\u0108\u0109\7T\2\2\u0109\u0113\7V\2\2\u010a\u010b"+
		"\7U\2\2\u010b\u010c\7q\2\2\u010c\u010d\7t\2\2\u010d\u0113\7v\2\2\u010e"+
		"\u010f\7u\2\2\u010f\u0110\7q\2\2\u0110\u0111\7t\2\2\u0111\u0113\7v\2\2"+
		"\u0112\u0106\3\2\2\2\u0112\u010a\3\2\2\2\u0112\u010e\3\2\2\2\u01138\3"+
		"\2\2\2\u0114\u0115\7N\2\2\u0115\u0116\7K\2\2\u0116\u0117\7O\2\2\u0117"+
		"\u0118\7K\2\2\u0118\u0124\7V\2\2\u0119\u011a\7N\2\2\u011a\u011b\7k\2\2"+
		"\u011b\u011c\7o\2\2\u011c\u011d\7k\2\2\u011d\u0124\7v\2\2\u011e\u011f"+
		"\7n\2\2\u011f\u0120\7k\2\2\u0120\u0121\7o\2\2\u0121\u0122\7k\2\2\u0122"+
		"\u0124\7v\2\2\u0123\u0114\3\2\2\2\u0123\u0119\3\2\2\2\u0123\u011e\3\2"+
		"\2\2\u0124:\3\2\2\2\u0125\u0126\7F\2\2\u0126\u0127\7K\2\2\u0127\u0128"+
		"\7U\2\2\u0128\u0129\7V\2\2\u0129\u012a\7K\2\2\u012a\u012b\7P\2\2\u012b"+
		"\u012c\7E\2\2\u012c\u013e\7V\2\2\u012d\u012e\7F\2\2\u012e\u012f\7k\2\2"+
		"\u012f\u0130\7u\2\2\u0130\u0131\7v\2\2\u0131\u0132\7k\2\2\u0132\u0133"+
		"\7p\2\2\u0133\u0134\7e\2\2\u0134\u013e\7v\2\2\u0135\u0136\7f\2\2\u0136"+
		"\u0137\7k\2\2\u0137\u0138\7u\2\2\u0138\u0139\7v\2\2\u0139\u013a\7k\2\2"+
		"\u013a\u013b\7p\2\2\u013b\u013c\7e\2\2\u013c\u013e\7v\2\2\u013d\u0125"+
		"\3\2\2\2\u013d\u012d\3\2\2\2\u013d\u0135\3\2\2\2\u013e<\3\2\2\2\u013f"+
		"\u0140\7Q\2\2\u0140\u0144\7P\2\2\u0141\u0142\7q\2\2\u0142\u0144\7p\2\2"+
		"\u0143\u013f\3\2\2\2\u0143\u0141\3\2\2\2\u0144>\3\2\2\2\u0145\u0146\7"+
		"C\2\2\u0146\u014a\7U\2\2\u0147\u0148\7c\2\2\u0148\u014a\7u\2\2\u0149\u0145"+
		"\3\2\2\2\u0149\u0147\3\2\2\2\u014a@\3\2\2\2\u014b\u014c\7D\2\2\u014c\u0150"+
		"\7[\2\2\u014d\u014e\7d\2\2\u014e\u0150\7{\2\2\u014f\u014b\3\2\2\2\u014f"+
		"\u014d\3\2\2\2\u0150B\3\2\2\2\u0151\u0152\7Q\2\2\u0152\u0153\7W\2\2\u0153"+
		"\u0154\7V\2\2\u0154\u0155\7G\2\2\u0155\u015c\7T\2\2\u0156\u0157\7q\2\2"+
		"\u0157\u0158\7w\2\2\u0158\u0159\7v\2\2\u0159\u015a\7g\2\2\u015a\u015c"+
		"\7t\2\2\u015b\u0151\3\2\2\2\u015b\u0156\3\2\2\2\u015cD\3\2\2\2\u015d\u015e"+
		"\7N\2\2\u015e\u015f\7G\2\2\u015f\u0160\7H\2\2\u0160\u0166\7V\2\2\u0161"+
		"\u0162\7n\2\2\u0162\u0163\7g\2\2\u0163\u0164\7h\2\2\u0164\u0166\7v\2\2"+
		"\u0165\u015d\3\2\2\2\u0165\u0161\3\2\2\2\u0166F\3\2\2\2\u0167\u0168\7"+
		"T\2\2\u0168\u0169\7K\2\2\u0169\u016a\7I\2\2\u016a\u016b\7J\2\2\u016b\u0172"+
		"\7V\2\2\u016c\u016d\7t\2\2\u016d\u016e\7k\2\2\u016e\u016f\7i\2\2\u016f"+
		"\u0170\7j\2\2\u0170\u0172\7v\2\2\u0171\u0167\3\2\2\2\u0171\u016c\3\2\2"+
		"\2\u0172H\3\2\2\2\u0173\u0174\7C\2\2\u0174\u0175\7U\2\2\u0175\u017a\7"+
		"E\2\2\u0176\u0177\7c\2\2\u0177\u0178\7u\2\2\u0178\u017a\7e\2\2\u0179\u0173"+
		"\3\2\2\2\u0179\u0176\3\2\2\2\u017aJ\3\2\2\2\u017b\u017c\7F\2\2\u017c\u017d"+
		"\7G\2\2\u017d\u017e\7U\2\2\u017e\u0184\7E\2\2\u017f\u0180\7f\2\2\u0180"+
		"\u0181\7g\2\2\u0181\u0182\7u\2\2\u0182\u0184\7e\2\2\u0183\u017b\3\2\2"+
		"\2\u0183\u017f\3\2\2\2\u0184L\3\2\2\2\u0185\u0186\7V\2\2\u0186\u0187\7"+
		"T\2\2\u0187\u0188\7W\2\2\u0188\u018e\7G\2\2\u0189\u018a\7v\2\2\u018a\u018b"+
		"\7t\2\2\u018b\u018c\7w\2\2\u018c\u018e\7g\2\2\u018d\u0185\3\2\2\2\u018d"+
		"\u0189\3\2\2\2\u018eN\3\2\2\2\u018f\u0190\7H\2\2\u0190\u0191\7C\2\2\u0191"+
		"\u0192\7N\2\2\u0192\u0193\7U\2\2\u0193\u019a\7G\2\2\u0194\u0195\7h\2\2"+
		"\u0195\u0196\7c\2\2\u0196\u0197\7n\2\2\u0197\u0198\7u\2\2\u0198\u019a"+
		"\7g\2\2\u0199\u018f\3\2\2\2\u0199\u0194\3\2\2\2\u019aP\3\2\2\2\u019b\u019c"+
		"\7L\2\2\u019c\u019d\7Q\2\2\u019d\u019e\7K\2\2\u019e\u01a4\7P\2\2\u019f"+
		"\u01a0\7l\2\2\u01a0\u01a1\7q\2\2\u01a1\u01a2\7k\2\2\u01a2\u01a4\7p\2\2"+
		"\u01a3\u019b\3\2\2\2\u01a3\u019f\3\2\2\2\u01a4R\3\2\2\2\u01a5\u01b1\7"+
		"Z\2\2\u01a6\u01a7\7E\2\2\u01a7\u01a8\7T\2\2\u01a8\u01a9\7Q\2\2\u01a9\u01aa"+
		"\7U\2\2\u01aa\u01b1\7U\2\2\u01ab\u01ac\7e\2\2\u01ac\u01ad\7t\2\2\u01ad"+
		"\u01ae\7q\2\2\u01ae\u01af\7u\2\2\u01af\u01b1\7u\2\2\u01b0\u01a5\3\2\2"+
		"\2\u01b0\u01a6\3\2\2\2\u01b0\u01ab\3\2\2\2\u01b1T\3\2\2\2\u01b2\u01be"+
		"\7W\2\2\u01b3\u01b4\7W\2\2\u01b4\u01b5\7P\2\2\u01b5\u01b6\7K\2\2\u01b6"+
		"\u01b7\7Q\2\2\u01b7\u01be\7P\2\2\u01b8\u01b9\7w\2\2\u01b9\u01ba\7p\2\2"+
		"\u01ba\u01bb\7k\2\2\u01bb\u01bc\7q\2\2\u01bc\u01be\7p\2\2\u01bd\u01b2"+
		"\3\2\2\2\u01bd\u01b3\3\2\2\2\u01bd\u01b8\3\2\2\2\u01beV\3\2\2\2\u01bf"+
		"\u01c9\7^\2\2\u01c0\u01c1\7F\2\2\u01c1\u01c2\7K\2\2\u01c2\u01c3\7H\2\2"+
		"\u01c3\u01c9\7H\2\2\u01c4\u01c5\7f\2\2\u01c5\u01c6\7k\2\2\u01c6\u01c7"+
		"\7h\2\2\u01c7\u01c9\7h\2\2\u01c8\u01bf\3\2\2\2\u01c8\u01c0\3\2\2\2\u01c8"+
		"\u01c4\3\2\2\2\u01c9X\3\2\2\2\u01ca\u01de\7(\2\2\u01cb\u01cc\7K\2\2\u01cc"+
		"\u01cd\7P\2\2\u01cd\u01ce\7V\2\2\u01ce\u01cf\7G\2\2\u01cf\u01d0\7T\2\2"+
		"\u01d0\u01d1\7U\2\2\u01d1\u01d2\7G\2\2\u01d2\u01d3\7E\2\2\u01d3\u01de"+
		"\7V\2\2\u01d4\u01d5\7k\2\2\u01d5\u01d6\7p\2\2\u01d6\u01d7\7v\2\2\u01d7"+
		"\u01d8\7g\2\2\u01d8\u01d9\7t\2\2\u01d9\u01da\7u\2\2\u01da\u01db\7g\2\2"+
		"\u01db\u01dc\7e\2\2\u01dc\u01de\7v\2\2\u01dd\u01ca\3\2\2\2\u01dd\u01cb"+
		"\3\2\2\2\u01dd\u01d4\3\2\2\2\u01deZ\3\2\2\2\u01df\u01e1\t\2\2\2\u01e0"+
		"\u01df\3\2\2\2\u01e1\u01e2\3\2\2\2\u01e2\u01e0\3\2\2\2\u01e2\u01e3\3\2"+
		"\2\2\u01e3\\\3\2\2\2\u01e4\u01e6\7$\2\2\u01e5\u01e7\t\3\2\2\u01e6\u01e5"+
		"\3\2\2\2\u01e7\u01e8\3\2\2\2\u01e8\u01e6\3\2\2\2\u01e8\u01e9\3\2\2\2\u01e9"+
		"\u01ed\3\2\2\2\u01ea\u01ec\t\4\2\2\u01eb\u01ea\3\2\2\2\u01ec\u01ef\3\2"+
		"\2\2\u01ed\u01eb\3\2\2\2\u01ed\u01ee\3\2\2\2\u01ee\u01f0\3\2\2\2\u01ef"+
		"\u01ed\3\2\2\2\u01f0\u01f1\7$\2\2\u01f1^\3\2\2\2\u01f2\u01f4\t\5\2\2\u01f3"+
		"\u01f2\3\2\2\2\u01f4\u01f5\3\2\2\2\u01f5\u01f3\3\2\2\2\u01f5\u01f6\3\2"+
		"\2\2\u01f6`\3\2\2\2\u01f7\u01f9\t\6\2\2\u01f8\u01f7\3\2\2\2\u01f9\u01fa"+
		"\3\2\2\2\u01fa\u01f8\3\2\2\2\u01fa\u01fb\3\2\2\2\u01fb\u01fc\3\2\2\2\u01fc"+
		"\u01fd\b\61\2\2\u01fdb\3\2\2\2\"\2\u0096\u00a1\u00ac\u00b7\u00c8\u00dc"+
		"\u00f3\u0104\u0112\u0123\u013d\u0143\u0149\u014f\u015b\u0165\u0171\u0179"+
		"\u0183\u018d\u0199\u01a3\u01b0\u01bd\u01c8\u01dd\u01e2\u01e8\u01ed\u01f5"+
		"\u01fa\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}